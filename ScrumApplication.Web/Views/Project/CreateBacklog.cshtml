@using ScrumApplication.Entity.Models
@model ScrumApplication.Entity.Models.BacklogViewModel

@{
    ViewBag.Title = "CreateTask";
}

<h2>Create Backlog</h2>

@using (Html.BeginForm("CreateBacklog", "Project" , FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
                @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ProductBacklog</h4>
        <hr />
        <div class="row">
            <div class="col-md-6">
                @Html.HiddenFor(model => model.Backlog.ProjectId)

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Backlog.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Backlog.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Backlog.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Backlog.SprintNo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Backlog.SprintNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Backlog.SprintNo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Backlog.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Backlog.Priority, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Backlog.Priority, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Backlog.StoryPoint, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Backlog.StoryPoint,
                       new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Backlog.StoryPoint, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Backlog.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Backlog.Description,
                       new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Backlog.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Backlog.EpicId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(x => Model.Backlog.EpicId, new SelectList(Model.ProjectEpics, "EpicId", "Name"),
                       htmlAttributes: new { @class = "form-control", id = "EpicId" })

                        @*@Html.DropDownListFor(model => model.Backlog.EpicId,
                new SelectList(Model.ProjectEpics, "EpicId", "Name"), "Select Epic",
                new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.Backlog.EpicId, "", new { @class = "text-danger" })
                        @*<a href="@Url.Action("CreateEpic", "Project", new { id = Model.Epic.ProjectId }, Request.Url.Scheme)"
                style="margin-top:20px;" class="btn btn-default">Create Epic</a>*@
                    </div>
                </div>
                @*Status seçmek için DropDown/RadioBox eklenecek*@
                <div class="form-group">
                    @Html.LabelFor(model => model.Backlog.BacklogStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(x => Model.Backlog.BacklogStatus, new SelectList(Enum.GetValues(typeof(Status)),
                       "Text"), htmlAttributes: new { @class = "form-control", id = "BacklogStatus" })
                        @*@Html.DropDownListFor(model => model.Backlog.BacklogStatus,*@
                        @*new SelectList(Enum.GetValues(typeof(Status))), "Select Status", new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.Backlog.BacklogStatus, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Backlog.AcceptanceCriteria,
                   htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Backlog.AcceptanceCriteria, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Backlog.AcceptanceCriteria, "",
                       new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        
        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    <a href="@Url.Action("IndexBacklog", "Project", new { id = Model.Backlog.ProjectId },
                Request.Url.Scheme)" style="margin-top:20px;" class="btn btn-primary">Back To List</a>
</div>
