@using ScrumApplication.DAL.Repositories
@model ScrumApplication.Entity.Models.Project

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Project</h4>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ProjectId)
    @Html.HiddenFor(model => model.TeamId)
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DayCount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DayCount, new { htmlAttributes = new { @class = "form-control" }, placeholder = "How long project take" })
            @Html.ValidationMessageFor(model => model.DayCount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DefaultSprintTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DefaultSprintTime, new { htmlAttributes = new { @class = "form-control" }, placeholder = "Default sprint days" })
            @Html.ValidationMessageFor(model => model.DefaultSprintTime, "", new { @class = "text-danger" })
        </div>
    </div>


    @if (TeamRepository.IsProjectManager(Model.ProjectId))
    {
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
                @if (!Model.IsDone)
                {
                    <a href="@Url.Action("Complete", "Project", new { id = Model.ProjectId })" class="btn btn-success">Mark as Completed</a>
                }
                else
                {
                    <a href="@Url.Action("Green", "Project", new { id = Model.ProjectId })" class="btn btn-success">Mark as Uncompleted</a>
                }

            </div>
        </div>

    }
</div>
}

    <div>
        <a href="@Url.Action("BackToList", "Project", new { id = Model.TeamId })" class="btn btn-primary">Back To List</a>
    </div>
