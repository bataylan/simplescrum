@using ScrumApplication.DAL.Repositories
@model ScrumApplication.Entity.Models.ProjectEditViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Project</h4>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Project.ProjectId)
    @Html.HiddenFor(model => model.Project.TeamId)
    <div class="row">
        <div class="col-md-6 col-sm-10">
            <div class="form-group">
                @Html.LabelFor(model => model.Project.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Project.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Project.Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Project.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Project.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Project.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Project.DayCount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Project.DayCount, new { htmlAttributes = new { @class = "form-control" }, placeholder = "How long project take" })
                    @Html.ValidationMessageFor(model => model.Project.DayCount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                Sprint Time(Day)
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Project.DefaultSprintTime, new { htmlAttributes = new { @class = "form-control" }, placeholder = "Default sprint days" })
                    @Html.ValidationMessageFor(model => model.Project.DefaultSprintTime, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-6 col-sm-10">
            <div class="form-group">
                <div class="col-md-10">Select Team</div>
                <div class="col-md-10">
                    @Html.DropDownListFor(x => Model.Project.TeamId, new SelectList(Model.UserTeams, "TeamId", "Name"),
                               htmlAttributes: new { @class = "form-control", id = "BacklogStatus" })
                    @Html.ValidationMessageFor(model => model.Project.TeamId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div>
                <div class="col-md-6 col-sm-10">
                    <div class="col-md-10" style="margin:auto;">
                        
                        <div style="margin-top:10px;">
                            OR <a href="@Url.Action("Create", "Team", new { projectId = Model.Project.ProjectId })" class="btn btn-success" style="margin-left: 20px;">Create Team</a>
                        </div>
                    </div>
                    
                </div>
            </div>
        </div>
    </div>

    

   

    @if (TeamRepository.IsProjectManager(Model.Project.ProjectId))
    {
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
                @if (!Model.Project.IsDone)
                {
                    <a href="@Url.Action("Complete", "Project", new { id = Model.Project.ProjectId })" class="btn btn-success">Mark as Completed</a>
                }
                else
                {
                    <a href="@Url.Action("Green", "Project", new { id = Model.Project.ProjectId })" class="btn btn-success">Mark as Uncompleted</a>
                }
            </div>
        </div>

    }
</div>
}

    <div>
        <a href="@Url.Action("BackToList", "Project", new { id = Model.Project.TeamId })" class="btn btn-primary">Back To List</a>
    </div>
