@model ScrumApplication.Entity.Models.SprintTask

@{
    ViewBag.Title = "CreateTask";
}

<h2>Create Task</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>SprintTask</h4>
    <hr />
    @Html.HiddenFor(model => model.SprintId)
    @Html.HiddenFor(model => model.ProjectId)
    @Html.HiddenFor(model => model.Sprint)

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Priority, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Point, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Point, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Point, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

    <div>
        <a href="@Url.Action("BackToList", "Sprint", new { id = Model.ProjectId }, Request.Url.Scheme)" style="margin-top:20px;" class="btn btn-default">Back To List</a>
    </div>
